# docker-compose.yml --- dependency docker configuration.
#
# NOTE: Additional development environment configuration can be found in
#       docker-compose.override.yml which augments the services defined
#       in this file and is loaded by default when you call docker-compose
#       without setting the -f option.
#
#       See https://docs.docker.com/compose/extends/
version: '3.6'

services:

  dependency:
    build:
      context: .
      args:
        CI: $CI  # used to indicate if the build is run in a CI environment
    volumes:
      - .:/usr/src/app
    environment:
      ZK_ANNOUNCEMENT_CONTEXT: /services/apps/dependency/1.0
    depends_on:
      - zk.docker
      - cte-aac-service

  nginx:  # proxy to microservice ecosystem
    image: cdn-docker.363-283.io/docker/backend:nginx-1.11.12-alpine
    depends_on:
      - dependency
    volumes:
      - ./docker/nginx/templates/ssl.d/:/etc/nginx/templates/ssl.d/:ro


  #######################################################################
  # Authentication and Access Control(/AAC) Service (aka Security Service)
  #######################################################################
  cte-aac-service:
    image: cdn-docker.363-283.io/cte/cte-security-service:1.2.7
    volumes:
      - ./docker/cte-aac-service/engine.yml:/opt/services/aac-1.1/etc/policies/espm/engine.yml
      - ./docker/cte-aac-service/postgis.yml:/opt/services/aac-1.1/etc/policies/espe/postgis.yml
      - ./docker/cte-aac-service/postgis.yml:/opt/services/aac-1.1/policies/espe/postgis.yml
      - ./docker/config_file_setup.sh:/opt/config_file_setup.sh
    environment:
      LOG_LEVEL: "INFO"
      DEBUG: "false"
      GOV_IC_CTE_AAC_CONFIG_ACTIVATE_ADMIN_ENDPOINTS: "false"
      ENABLE_ADMIN_ENDPOINTS: "false"
      GOV_IC_CTE_AAC_CONFIG_REDIS_FAIL_SLEEPMILLISECONDS: 300
      GOV_IC_CTE_AAC_CONFIG_REDIS_FAIL_LOGRETRYCOUNT: 5
      COM_DECIPHERNOW_SERVER_CONFIG_REST_HTTPSPORT: 8443
    depends_on:
      - zk.docker
      - redis.docker
      - dias.docker


  ######################################################################
  # Kafka
  ######################################################################
  kafka:
    image: wurstmeister/kafka:0.10.0.0
    environment:
      KAFKA_ADVERTISED_HOST: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: "zk.docker:2181"
      KAFKA_CREATE_TOPICS: file-events:1:1,plexus-entity-events:1:1  # topic:replication-factor:partitions
    depends_on:
      - zk.docker


  #######################################################################
  # Foundational Infrastructure
  #######################################################################
  zk.docker:
    image: wurstmeister/zookeeper:3.4.6

  redis.docker:
    image: cdn-docker.363-283.io/docker/backend:redis-3.2.2

  dias.docker:
    image: cdn-docker.363-283.io/chimera/dias-simulator:latest

  

  ############################################################
  # start-dependencies
  #
  # This service waits for other services to become availalbe
  # before staring and exiting successfully.
  #
  # https://8thlight.com/blog/dariusz-pasciak/2016/10/17/docker-compose-wait-for-dependencies.html
  ############################################################
  start-dependencies:
    image: dadarek/wait-for-dependencies:0.1
    depends_on:
      - zk.docker
      - cte-aac-service
      - nginx
    command: >
      zk.docker:2181 \
      cte-aac-service:8443 \
      nginx:443 